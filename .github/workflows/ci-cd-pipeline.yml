name: CI/CD Pipeline with Terraform, Ansible, and Docker

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up AWS credentials for use in Terraform and Ansible
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Install Docker if not already installed (optional step)
      - name: Install Docker using the official convenience script
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh

      # Verify Docker Installation
      - name: Verify Docker Installation
        run: sudo docker --version

      # Initialize Terraform and apply configuration to provision EC2 instance
      - name: Terraform Initialize and Apply
        run: |
          terraform init
          terraform apply -auto-approve

      # Set EC2 public IP in inventory.ini and configure SSH
      - name: Set EC2 public IP in inventory.ini and configure SSH
        run: |
          # Retrieve the EC2 public IP from Terraform output
          EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)

          # Check if the EC2_PUBLIC_IP is set, if not, exit with an error
          if [ -z "$EC2_PUBLIC_IP" ]; then
            echo "Error: EC2_PUBLIC_IP is empty or not found!"
            exit 1
          fi

          # Update Ansible inventory.ini with EC2 public IP
          echo "[all]" > inventory.ini
          echo "web ansible_host=$EC2_PUBLIC_IP ansible_connection=ssh ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa ansible_python_interpreter=/usr/bin/python3" >> inventory.ini

          # Disable strict host key checking in SSH config
          mkdir -p ~/.ssh
          echo -e "Host *\n  StrictHostKeyChecking no\n  UserKnownHostsFile /dev/null" > ~/.ssh/config

      # Add the private SSH key from GitHub secrets
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Run the Ansible playbook with the correct Python interpreter and ensure the correct package manager
      - name: Run Ansible playbook
        run: |
          ansible-playbook -i inventory.ini playbook.yml -e "ansible_python_interpreter=/usr/bin/python3" -e "use_backend=dnf4"
