name: CI/CD Pipeline for Docker Deployment

on:
  push:
    branches:
      - main

jobs:
  install-dependencies:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Clean up Docker-related packages (Remove conflicts)
      run: |
        # Remove any Docker and containerd conflicts
        sudo apt-get remove -y docker docker-engine docker.io containerd containerd.io
        sudo apt-get purge -y docker docker-engine docker.io containerd containerd.io
        sudo apt-get autoremove -y
        sudo apt-get clean

    - name: Install Docker (for running the playbook)
      run: |
        # Update apt and install dependencies
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

        # Install Docker from Docker's official repository
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        sudo apt-get update

        # Install Docker and containerd
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io

        # Verify Docker installation
        docker --version

    - name: Add the current user to Docker group
      run: |
        sudo usermod -aG docker $USER
        newgrp docker

  deploy:
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Ansible inventory file
      run: |
        # Create a dynamic Ansible inventory file
        echo "[all]" > inventory.ini
        echo "your-ec2-instance-ip" >> inventory.ini
        cat inventory.ini

    - name: Run Ansible playbook
      run: |
        # Run the Ansible playbook
        ansible-playbook -i inventory.ini playbook.yml --extra-vars "aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }} aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1

  terraform:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Run Terraform plan
      run: |
        terraform init
        terraform plan

    - name: Apply Terraform plan
      run: |
        terraform apply -auto-approve

