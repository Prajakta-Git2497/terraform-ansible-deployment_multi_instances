name: CI/CD Pipeline with Terraform, Ansible, and Docker

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up AWS credentials for use in Terraform and Ansible
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Remove existing Docker and containerd dependencies if any
      - name: Remove existing Docker and containerd dependencies
        run: |
          sudo apt-get remove --purge -y docker docker-engine docker.io containerd runc containerd.io
          sudo apt-get autoremove -y
          sudo apt-get clean
          sudo rm -rf /var/lib/docker
          sudo rm -rf /var/lib/containerd
          sudo rm -rf /etc/docker
          sudo rm -rf /etc/containerd

      # Install Docker using the official convenience script
      - name: Install Docker using the official convenience script
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh

      # Verify Docker Installation
      - name: Verify Docker Installation
        run: sudo docker --version

      # Set up Ansible inventory file
      - name: Set up Ansible inventory file
        run: |
          echo "[all]" > inventory.ini
          echo "localhost ansible_connection=local" >> inventory.ini

      # Initialize Terraform and apply configuration to provision EC2 instance
      - name: Terraform Initialize and Apply
        run: |
          terraform init
          terraform apply -auto-approve

      # Run the script to update inventory.ini with the new EC2 IP
      - name: Update inventory.ini with the new EC2 IP
        run: |
          EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)  # Use the correct output variable name
          echo "[all]" > inventory.ini
          echo "web ansible_host=$EC2_PUBLIC_IP ansible_connection=ssh" >> inventory.ini

      # Add EC2 instance to known_hosts to avoid SSH verification failure
      - name: Add EC2 host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $EC2_PUBLIC_IP >> ~/.ssh/known_hosts  # Use the correct IP variable
          chmod 700 ~/.ssh
          chmod 644 ~/.ssh/known_hosts

      # Run the Ansible playbook
      - name: Run Ansible playbook
        run: |
          ansible-playbook -i inventory.ini playbook.yml

