name: CI/CD Pipeline with Terraform, Ansible, and Docker

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Remove existing Docker and containerd dependencies
        run: |
          sudo apt-get remove --purge -y docker docker-engine docker.io containerd runc containerd.io
          sudo apt-get autoremove -y
          sudo apt-get clean
          sudo rm -rf /var/lib/docker
          sudo rm -rf /var/lib/containerd
          sudo rm -rf /etc/docker
          sudo rm -rf /etc/containerd

      - name: Install Docker using the official convenience script
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh

      - name: Verify Docker Installation
        run: sudo docker --version

      - name: Terraform Initialize and Apply
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Retrieve EC2 Public IPs
        id: ec2_ips
        run: echo "EC2_PUBLIC_IPS=$(terraform output -json ec2_public_ips)" >> $GITHUB_ENV

      - name: Set up SSH private key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > my-key-pair.pem
          chmod 600 my-key-pair.pem
          mkdir -p ~/.ssh
          echo -e "Host *\n  StrictHostKeyChecking no\n  UserKnownHostsFile /dev/null" > ~/.ssh/config

      - name: Wait for EC2 instances to be ready
        run: sleep 150

      - name: Run Ansible playbook on each instance
        run: |
          EC2_IPS=$(echo ${{ env.EC2_PUBLIC_IPS }} | jq -r '.[]')
          for IP in $EC2_IPS; do
            ansible-playbook playbook.yml \
              -i "${IP}," \
              -e "ansible_user=ubuntu" \
              -e "ansible_host=${IP}" \
              -e "ansible_ssh_private_key_file=my-key-pair.pem" \
              -e "ansible_python_interpreter=/usr/bin/python3"
          done
