name: CI/CD Pipeline with Terraform, Ansible, and Docker

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "eu-west-1"

      - name: Remove existing Docker and containerd dependencies
        run: |
          sudo apt-get remove --purge -y docker docker-engine docker.io containerd runc containerd.io
          sudo apt-get autoremove -y
          sudo apt-get clean
          sudo rm -rf /var/lib/docker
          sudo rm -rf /var/lib/containerd
          sudo rm -rf /etc/docker
          sudo rm -rf /etc/containerd

      - name: Install Docker using the official convenience script
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh

      - name: Verify Docker Installation
        run: sudo docker --version

      - name: Set up Ansible inventory file
        run: |
          echo "[all]" > inventory
          echo "localhost ansible_connection=local" >> inventory

      - name: Decode and save EC2 private key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" | base64 --decode > ~/.ssh/MyNewKeyPair2.pem
          chmod 600 ~/.ssh/MyNewKeyPair2.pem

      - name: Run Ansible playbook
        run: |
          ansible-playbook -i inventory playbook.yml --private-key ~/.ssh/MyNewKeyPair2.pem

      - name: Terraform Initialize
        run: |
          cd terraform
          terraform init

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve

